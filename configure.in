
dnl Require autoconf version >= 2.57)
AC_PREREQ(2.57)



dnl ############# Initialization

AC_INIT([twolame], [0.3.4], [twolame-discuss@lists.sourceforge.net])

AC_CONFIG_SRCDIR( libtwolame/twolame.h )
AC_CONFIG_AUX_DIR( build )
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE($PACKAGE_NAME,$PACKAGE_VERSION)
AM_CONFIG_HEADER( build/config.h )



dnl ############# Compiler and tools Checks

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S

AC_PROG_LIBTOOL
AC_C_BIGENDIAN
AC_C_INLINE


dnl ############# Configure Arguments

AC_ARG_ENABLE(debug,
              [--enable-debug=[no/yes] turn on debugging],
              [ Debugging="Enabled" 
                AC_DEFINE(DEBUG, 1, [ Define if debugging is enabled. ]) ],
              [ Debugging="Disabled" ]
)



dnl ############## Library Checks

AC_CHECK_LIB([m], [sqrt])
AC_CHECK_LIB([mx], [powf])

PKG_CHECK_MODULES(SNDFILE, sndfile >= 1.0.0,
	[ HAVE_SNDFILE=yes
	  AC_DEFINE_UNQUOTED([HAVE_SNDFILE],1,[Set to 1 if you have libsndfile.]) ],
	[ HAVE_SNDFILE=no
	  AC_MSG_WARN(library libsndfile is unavailable) ]
)



dnl ############## Header Checks

AC_HEADER_STDC
AC_CHECK_HEADERS(assert.h unistd.h)
AC_CHECK_HEADERS(inttypes.h)
AC_CHECK_HEADERS(getopt.h)



dnl ############## Compiler and Linker Flags

# Optimize flag. 3 is about as high as you can sanely go with GCC3.2.
CFLAGS="$CFLAGS -O3 -Wunused -Wall"
LDFLAGS="$LDFLAGS"

if test x$Debugging = xEnabled; then
	CFLAGS="$CFLAGS -g -Werror"
fi



dnl ############## Only compile frontend if sndfile is available

TWOLAME_BIN=""
if test x$HAVE_SNDFILE = xyes; then
	TWOLAME_BIN="$TWOLAME_BIN twolame"
else 
	AC_MSG_WARN(Not building twolame frontend because libsndfile isn't available.)
fi
AC_SUBST( TWOLAME_BIN )



dnl ############## Final Output

AC_OUTPUT(
	Makefile \
	twolame.pc \
	debian/Makefile \
	doc/Makefile \
	libtwolame/Makefile \
	frontend/Makefile \
	simplefrontend/Makefile \
)
